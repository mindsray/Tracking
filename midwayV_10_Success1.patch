Index: app/src/main/java/com/example/tracking/Location.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/tracking/Location.java	(revision 264cfaa1f29c6efce76988012bd39a1ef4202406)
+++ app/src/main/java/com/example/tracking/Location.java	(date 1584896904993)
@@ -371,9 +371,7 @@
                 }
                 else
                 {
-
                     textViewSuccess.setText("ไม่สามารถส่งตำแหน่งได้เนื่องจากคุณไม่อยู่ในขอบเขต");
-
                 }
             }
             @Override
Index: app/src/main/java/com/example/tracking/Security.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/tracking/Security.java	(date 1584247872196)
+++ app/src/main/java/com/example/tracking/Security.java	(date 1584247872196)
@@ -0,0 +1,43 @@
+package com.example.tracking;
+
+import android.util.Base64;
+
+import java.security.Key;
+
+import javax.crypto.Cipher;
+import javax.crypto.spec.SecretKeySpec;
+
+public class Security {
+    private static final String ALGORITHM = "AES";
+    private static final String KEY = "1Hbfh667adfDEJ78";
+
+    public static String encrypt(String value) throws Exception
+    {
+        Key key = generateKey();
+        Cipher cipher = Cipher.getInstance(Security.ALGORITHM);
+        cipher.init(Cipher.ENCRYPT_MODE, key);
+        byte [] encryptedByteValue = cipher.doFinal(value.getBytes("utf-8"));
+        String encryptedValue64 = Base64.encodeToString(encryptedByteValue, Base64.DEFAULT);
+        return encryptedValue64;
+
+    }
+
+    public static String decrypt(String value) throws Exception
+    {
+        Key key = generateKey();
+        Cipher cipher = Cipher.getInstance(Security.ALGORITHM);
+        cipher.init(Cipher.DECRYPT_MODE, key);
+        byte[] decryptedValue64 = Base64.decode(value, Base64.DEFAULT);
+        byte [] decryptedByteValue = cipher.doFinal(decryptedValue64);
+        String decryptedValue = new String(decryptedByteValue,"utf-8");
+        return decryptedValue;
+
+    }
+
+    private static Key generateKey() throws Exception
+    {
+        Key key = new SecretKeySpec(Security.KEY.getBytes(),Security.ALGORITHM);
+        return key;
+    }
+}
+
Index: app/src/main/java/com/example/tracking/MessageAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/tracking/MessageAdapter.java	(date 1581082644476)
+++ app/src/main/java/com/example/tracking/MessageAdapter.java	(date 1581082644476)
@@ -0,0 +1,53 @@
+package com.example.tracking;
+
+
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.BaseAdapter;
+import android.widget.TextView;
+import java.util.ArrayList;
+
+
+
+public class MessageAdapter  extends  BaseAdapter{
+    Context context;
+
+    //    ArrayList<String> cusName;
+    ArrayList<String> messages;
+
+    public  MessageAdapter(Context context,ArrayList<String> messages) {
+        this.context = context;
+        this.messages = messages;
+    }
+
+    public int getCount(){
+        return messages.size();
+
+    }
+    @Override
+    public Object getItem(int position) {
+        return null;
+    }
+
+    @Override
+    public long getItemId(int position) {
+        return 0;
+    }
+
+    @Override
+    public View getView(int position, View convertView, ViewGroup parent) {
+        LayoutInflater inflater = (LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+
+        if(convertView == null)
+            convertView = inflater.inflate(R.layout.activity_history_message,parent,false);
+        TextView textshow = convertView.findViewById(R.id.textshowMessage);
+        textshow.setText(messages.get(position));
+
+
+
+        return convertView;
+    }
+
+}
Index: app/src/main/res/layout/activity_edit_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_edit_profile.xml	(date 1584889146759)
+++ app/src/main/res/layout/activity_edit_profile.xml	(date 1584889146759)
@@ -0,0 +1,136 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".EditProfile">
+    <androidx.appcompat.widget.Toolbar
+        android:id="@+id/toolbarrrr"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@drawable/toolbar"
+        >
+    </androidx.appcompat.widget.Toolbar>
+    <de.hdodenhof.circleimageview.CircleImageView
+        xmlns:app="http://schemas.android.com/apk/res-auto"
+        android:id="@+id/imageView"
+        android:layout_width="150dp"
+        android:layout_height="150dp"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentTop="true"
+        android:layout_alignParentEnd="true"
+        android:layout_marginStart="130dp"
+        android:layout_marginTop="100dp"
+        android:layout_marginEnd="130dp"
+        android:background="@drawable/image_icon_proflie"
+        app:civ_border_width="2dp"
+        android:layout_alignParentLeft="true"
+        app:civ_border_color="#00F7F4F4"
+        />
+
+    <LinearLayout
+        android:id="@+id/LayoutName"
+        android:layout_width="300dp"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/imageView"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="40dp"
+        android:background="@drawable/bgfortextview"
+        android:orientation="vertical"
+        android:paddingLeft="20dp"
+        android:paddingRight="20dp">
+
+
+        <EditText
+            android:id="@+id/EditTextName"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_centerHorizontal="true"
+            android:hint="ชื่อ"
+
+            android:inputType="textPersonName"
+            android:textSize="18sp" />
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/LayoutLastName"
+        android:layout_width="300dp"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/LayoutName"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="25dp"
+        android:background="@drawable/bgfortextview"
+        android:orientation="vertical"
+        android:paddingLeft="20dp"
+        android:paddingRight="20dp">
+
+
+        <EditText
+            android:id="@+id/EditText_LastName"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_centerHorizontal="true"
+            android:layout_gravity="center"
+            android:hint="นามสกุล"
+            android:textSize="18sp">
+
+        </EditText>
+    </LinearLayout>
+
+
+    <LinearLayout
+        android:id="@+id/LayoutEmail"
+        android:layout_width="300dp"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/LayoutLastName"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="25dp"
+        android:background="@drawable/bgfortextview"
+        android:paddingLeft="20dp"
+        android:paddingRight="20dp">
+
+        <EditText
+            android:id="@+id/EditText_Email"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_centerHorizontal="true"
+            android:hint="อีเมล"
+            android:inputType="textEmailAddress"
+
+            android:textSize="18sp">
+
+
+        </EditText>
+    </LinearLayout>
+
+
+
+    <LinearLayout
+        android:id="@+id/LayoutReg"
+        android:layout_width="300dp"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/LayoutEmail"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="40dp"
+        android:orientation="vertical"
+        android:paddingLeft="20dp"
+        android:paddingRight="20dp">
+
+    <Button
+        android:id="@+id/Button_Update"
+        android:layout_width="150dp"
+        android:layout_height="50dp"
+        android:layout_centerHorizontal="true"
+        android:layout_gravity="center"
+
+
+        android:background="@drawable/button_default"
+        android:text="อัพเดตข้อมูล"
+        android:textColor="#FFFFFF"
+        >
+    </Button>
+    </LinearLayout>
+
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/tracking/Register.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/tracking/Register.java	(revision 264cfaa1f29c6efce76988012bd39a1ef4202406)
+++ app/src/main/java/com/example/tracking/Register.java	(date 1584895993066)
@@ -4,6 +4,8 @@
         androidx.annotation.NonNull;
 import androidx.appcompat.app.AlertDialog;
 import androidx.appcompat.app.AppCompatActivity;
+import androidx.appcompat.widget.Toolbar;
+import androidx.core.content.ContextCompat;
 
 import android.annotation.SuppressLint;
 import android.app.Activity;
@@ -12,6 +14,7 @@
 import android.content.ContentResolver;
 import android.content.Intent;
 import android.graphics.Bitmap;
+import android.graphics.drawable.Drawable;
 import android.media.Image;
 import android.net.Uri;
 import android.os.Bundle;
@@ -56,6 +59,7 @@
 import java.util.HashMap;
 import java.util.UUID;
 import java.util.regex.Pattern;
+import static com.example.tracking.R.id.toolbarrrr;
 
 import de.hdodenhof.circleimageview.CircleImageView;
 
@@ -99,6 +103,21 @@
 
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_register);
+        Toolbar toolbar = (Toolbar) findViewById(toolbarrrr);
+
+        setSupportActionBar(toolbar);
+        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+//        getSupportActionBar().setDisplayShowHomeEnabled(true);
+
+        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                onBackPressed();
+                // perform whatever you want on back arrow click
+            }
+        });
+        Drawable drawable = ContextCompat.getDrawable(getApplicationContext(),R.drawable.baseline_more_vert_black_18dp);
+        toolbar.setOverflowIcon(drawable);
         mStorageRef = FirebaseStorage.getInstance().getReference("Images");
         id = UUID.randomUUID();
         mAuth = FirebaseAuth.getInstance();
Index: app/src/main/java/com/example/tracking/ShowProfile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/tracking/ShowProfile.java	(date 1584889298561)
+++ app/src/main/java/com/example/tracking/ShowProfile.java	(date 1584889298561)
@@ -0,0 +1,202 @@
+package com.example.tracking;
+
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.appcompat.widget.Toolbar;
+import androidx.core.content.ContextCompat;
+
+import android.content.Intent;
+import android.graphics.drawable.Drawable;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.Button;
+import android.widget.TextView;
+
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ValueEventListener;
+import com.squareup.picasso.Picasso;
+import de.hdodenhof.circleimageview.CircleImageView;
+import static com.example.tracking.R.id.toolbarrrr;
+
+public class ShowProfile extends AppCompatActivity {
+    private FirebaseAuth mAuth;
+    private TextView Name , LastName , Email ,PassWord , CFPassWord;
+    CircleImageView imageview;
+    private Button EditProfile;
+    String name , lastName , email ,passWord , cfPassWord ,link;
+    private FirebaseAuth firebaseAuth;
+    private FirebaseUser firebaseUser;
+    String uid;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_show_profile);
+        Toolbar toolbar = (Toolbar) findViewById(toolbarrrr);
+
+        setSupportActionBar(toolbar);
+        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+//        getSupportActionBar().setDisplayShowHomeEnabled(true);
+
+        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                onBackPressed();
+                // perform whatever you want on back arrow click
+            }
+        });
+        Drawable drawable = ContextCompat.getDrawable(getApplicationContext(),R.drawable.baseline_more_vert_black_18dp);
+        toolbar.setOverflowIcon(drawable);
+
+        Name = findViewById(R.id.EditTextName);
+        LastName = findViewById(R.id.EditText_LastName);
+        Email = findViewById(R.id.EditText_Email);
+        PassWord = findViewById(R.id.EditText_PassWord);
+        CFPassWord = findViewById(R.id.EditText_CFPassWord);
+        EditProfile = findViewById(R.id.Button_Register);
+        imageview = findViewById(R.id.imageView);
+
+        mAuth = FirebaseAuth.getInstance();
+        FirebaseUser currentUser = mAuth.getCurrentUser();
+
+
+        Name = findViewById(R.id.EditTextName);
+        LastName = findViewById(R.id.EditText_LastName);
+        Email = findViewById(R.id.EditText_Email);
+        PassWord = findViewById(R.id.EditText_PassWord);
+        CFPassWord = findViewById(R.id.EditText_CFPassWord);
+        EditProfile = findViewById(R.id.Button_Register);
+        imageview = findViewById(R.id.imageView);
+        firebaseAuth = firebaseAuth.getInstance();
+        firebaseUser = firebaseAuth.getCurrentUser();
+        uid = firebaseUser.getUid();
+
+        Email.setText(firebaseUser.getEmail());
+        DatabaseReference rootRef = FirebaseDatabase.getInstance().getReference();
+        DatabaseReference uidRef = rootRef.child("User").child(uid);
+        ValueEventListener valueEventListener = new ValueEventListener() {
+            @Override
+            public void onDataChange(DataSnapshot dataSnapshot) {
+                name = dataSnapshot.child("Name").getValue(String.class);
+                Name.setText(name); //getnameไว้หน้าUI
+                System.out.println(name);
+                lastName = dataSnapshot.child("Last").getValue(String.class);
+                LastName.setText(lastName);
+                System.out.println(lastName);
+                email = dataSnapshot.child("email").getValue(String.class);
+                Email.setText(email);
+                System.out.println(email);
+                link = dataSnapshot.child("imageUrl").getValue(String.class);
+                LoadImageUrl(link);
+            }
+
+            @Override
+            public void onCancelled(DatabaseError databaseError) {}
+        };
+        uidRef.addListenerForSingleValueEvent(valueEventListener);
+
+
+        EditProfile.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                startActivity(new Intent(ShowProfile.this, EditProfile.class));
+            }
+        });
+
+
+    }
+
+    private void ShowData(){
+
+        DatabaseReference rootRef2 = FirebaseDatabase.getInstance().getReference();
+        DatabaseReference uidRef = rootRef2.child("User").child(uid);
+        ValueEventListener valueEventListener = new ValueEventListener() {
+            @Override
+            public void onDataChange(DataSnapshot dataSnapshot) {
+                name = dataSnapshot.child("Name").getValue(String.class);
+                Name.setText(name); //getnameไว้หน้าUI
+                lastName = dataSnapshot.child("Last").getValue(String.class);
+                LastName.setText(lastName);
+                email = dataSnapshot.child("email").getValue(String.class);
+                Email.setText(email);
+                link = dataSnapshot.child("imageUrl").getValue(String.class);
+                LoadImageUrl(link);
+            }
+
+            @Override
+            public void onCancelled(DatabaseError databaseError) {}
+        };
+        uidRef.addListenerForSingleValueEvent(valueEventListener);
+
+
+        EditProfile.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                startActivity(new Intent(ShowProfile.this, EditProfile.class));
+            }
+        });
+
+
+    }
+
+    private  void LoadImageUrl(String link){
+
+        Picasso.get().load(link).placeholder(R.mipmap.ic_launcher)
+                .error(R.mipmap.ic_launcher)
+                .into(imageview, new com.squareup.picasso.Callback(){
+
+                    @Override
+                    public void onSuccess() {
+
+                        System.out.println("sssssssssssssssssssss");
+                    }
+                    @Override
+                    public void onError(Exception e) {
+                        System.out.println("rrrrrrrrrrrrrrrrrrrr");
+
+                    }
+                });
+    }
+
+    @Override
+    public void onStart() {
+        super.onStart();
+        ShowData();
+//        System.out.println(name +"OOOOOOOOOOOO");
+        System.out.println("++ ON START ++ ");
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        ShowData();
+//        System.out.println(name +"OOOOOOOOOOOO");
+        System.out.println("+ ON RESUME +");
+
+
+    }
+
+    @Override
+    public void onPause() {
+        super.onPause();
+        System.out.println("- ON PAUSE -");
+    }
+
+    @Override
+    public void onStop() {
+        super.onStop();
+        System.out.println("-- ON STOP -- ");
+    }
+
+    @Override
+    public void onDestroy() {
+        super.onDestroy();
+        System.out.println("- ON DESTROY - ");
+    }
+
+
+}
Index: app/src/main/res/layout/activity_history_message.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_history_message.xml	(date 1584948947876)
+++ app/src/main/res/layout/activity_history_message.xml	(date 1584948947876)
@@ -0,0 +1,52 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".HistoryMessage">
+
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+        <androidx.appcompat.widget.Toolbar
+            android:id="@+id/toolbarrrr"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@drawable/toolbar"
+            >
+        </androidx.appcompat.widget.Toolbar>
+
+
+<LinearLayout
+    android:id="@+id/layout_His"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_marginTop="100dp"
+    android:orientation="horizontal">
+
+    <ListView
+        android:id="@+id/list"
+        android:layout_width="match_parent"
+        android:layout_height="300dp"
+
+        ></ListView>
+
+</LinearLayout>
+
+
+        <TextView
+            android:id="@+id/textshowMessage"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+
+            >
+
+        </TextView>
+
+
+
+
+
+
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/tracking/HistoryMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/tracking/HistoryMessage.java	(date 1584948307323)
+++ app/src/main/java/com/example/tracking/HistoryMessage.java	(date 1584948307323)
@@ -0,0 +1,80 @@
+package com.example.tracking;
+
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.appcompat.widget.Toolbar;
+import androidx.core.content.ContextCompat;
+
+import android.content.Context;
+import android.graphics.drawable.Drawable;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.ArrayAdapter;
+import android.widget.ListView;
+
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ValueEventListener;
+
+import java.util.ArrayList;
+import static com.example.tracking.R.id.toolbarrrr;
+
+public class HistoryMessage extends AppCompatActivity {
+    ListView list;
+    String text;
+    private FirebaseAuth firebaseAuth;
+    private FirebaseUser firebaseUser;
+    ArrayList<String> history = new ArrayList<>();
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_history_message);
+        Toolbar toolbar = (Toolbar) findViewById(toolbarrrr);
+
+        setSupportActionBar(toolbar);
+        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+//        getSupportActionBar().setDisplayShowHomeEnabled(true);
+
+        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                onBackPressed();
+                // perform whatever you want on back arrow click
+            }
+        });
+        Drawable drawable = ContextCompat.getDrawable(getApplicationContext(),R.drawable.baseline_more_vert_black_18dp);
+        toolbar.setOverflowIcon(drawable);
+        list = findViewById(R.id.list);
+        firebaseAuth = firebaseAuth.getInstance();
+        firebaseUser = firebaseAuth.getCurrentUser();
+        ArrayList<String> Message = getIntent().getStringArrayListExtra("Mymessage");
+//        MessageAdapter adapter = new MessageAdapter(getApplicationContext(),Message );
+
+        String uid = firebaseUser.getUid();
+        DatabaseReference rootRef = FirebaseDatabase.getInstance().getReference();
+        DatabaseReference uidRef = rootRef.child("MessageHistory").child(uid);
+        ValueEventListener valueEventListener = new ValueEventListener() {
+            @Override
+            public void onDataChange(DataSnapshot dataSnapshot) {
+                dataSnapshot.getChildrenCount();
+                for (int i =0 ;i<dataSnapshot.getChildrenCount();i++){
+                    history.add((String) dataSnapshot.child(String.valueOf(i)).getValue());
+                }
+                MessageAdapter adapter = new MessageAdapter(getApplicationContext(),history );
+                list.setAdapter(adapter);
+
+            }
+
+            @Override
+            public void onCancelled(DatabaseError databaseError) {}
+        };
+        uidRef.addListenerForSingleValueEvent(valueEventListener);
+
+
+
+    }
+}
Index: app/src/main/java/com/example/tracking/ChangePassword.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/tracking/ChangePassword.java	(date 1584888512297)
+++ app/src/main/java/com/example/tracking/ChangePassword.java	(date 1584888512297)
@@ -0,0 +1,302 @@
+package com.example.tracking;
+
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.appcompat.widget.Toolbar;
+import androidx.core.content.ContextCompat;
+
+import android.app.AlertDialog;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.graphics.drawable.Drawable;
+import android.os.Bundle;
+import android.provider.Settings;
+import android.util.Base64;
+import android.util.Log;
+import android.view.ContextMenu;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.Toast;
+
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.firebase.auth.AuthCredential;
+import com.google.firebase.auth.EmailAuthProvider;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+import com.google.android.gms.tasks.*;
+import com.google.android.material.snackbar.*;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ValueEventListener;
+
+import org.w3c.dom.CDATASection;
+
+import java.security.Key;
+import java.security.MessageDigest;
+import java.security.SecureRandom;
+import java.util.HashMap;
+import static com.example.tracking.R.id.toolbarrrr;
+
+
+
+public class ChangePassword extends AppCompatActivity {
+    Button ChangePassword;
+    private FirebaseAuth firebaseAuth;
+    private FirebaseUser firebaseUser;
+    String pass , passCur , newpass,cfpass;
+    String newPassword;
+    String uid;
+    EditText PasswordCurrent , NewPassword , CFPassword;
+    private DatabaseReference reference;
+    HashMap hashMap = new HashMap<>();
+    String passCurrentEncrypt , NewPassEncrypt , CFPasswordEncrypt ;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_change_password);
+        Toolbar toolbar = findViewById(toolbarrrr);
+
+        setSupportActionBar(toolbar);
+        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+//        getSupportActionBar().setDisplayShowHomeEnabled(true);
+
+        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                onBackPressed();
+                // perform whatever you want on back arrow click
+            }
+        });
+
+        Drawable drawable = ContextCompat.getDrawable(getApplicationContext(),R.drawable.baseline_more_vert_black_18dp);
+        toolbar.setOverflowIcon(drawable);
+
+        ChangePassword = findViewById(R.id.Button_ChangePassword);
+        firebaseAuth = firebaseAuth.getInstance();
+        firebaseUser = firebaseAuth.getCurrentUser();
+
+
+        PasswordCurrent = findViewById(R.id.EditText_CurrentPassword);
+        NewPassword = findViewById(R.id.EditText_NewPassword);
+        CFPassword = findViewById(R.id.EditText_CFNewPassword);
+        uid = firebaseUser.getUid();
+
+         ShowPassword();
+
+         ChangePassword.setOnClickListener(new View.OnClickListener() {
+             @Override
+             public void onClick(View view) {
+                 passCur = PasswordCurrent.getText().toString();
+                 newpass = NewPassword.getText().toString();
+                 cfpass = CFPassword.getText().toString();
+//                 System.out.println(pass +"1111111");
+                 passCurrentEncrypt =  EncryptPassword(passCur);
+//                 System.out.println(passCurrentEncrypt +"222222");
+//                buildAlertCFPassword();
+                 NewPassEncrypt =  EncryptPassword(newpass);
+//                 System.out.println(NewPassEncrypt +"44444444");
+
+                 CFPasswordEncrypt = EncryptPassword(cfpass);
+//                 System.out.println(CFPasswordEncrypt + " 55555555555");
+
+                 if (passCurrentEncrypt.equals(pass)){
+
+                     if (NewPassEncrypt.equals(CFPasswordEncrypt)){
+                         updateData();
+                         updatePasswordFirebaseAuth();
+                         Toast.makeText(ChangePassword.this, "เปลี่ยนรหัสผ่านสำเร็จ", Toast.LENGTH_SHORT).show();
+                     }
+
+                     else {
+                         Toast.makeText(ChangePassword.this, "กรุณากรอกรหัสผ่านใหม่ให้ตรงกัน", Toast.LENGTH_SHORT).show();
+                     }
+
+
+                 }
+
+                 else {
+
+                     Toast.makeText(ChangePassword.this, "กรุณากรอกรหัสผ่านปัจจุบันให้ถูกต้อง", Toast.LENGTH_SHORT).show();
+                 }
+
+
+             }
+         });
+
+
+    }
+//    @Override
+//    public boolean onCreateOptionsMenu(Menu menu) {
+////        System.out.println("menuuuu");
+//        MenuInflater inflater = getMenuInflater();
+//        inflater.inflate(R.menu.option,menu);
+//        return true;
+//    }
+//    @Override
+//    public boolean onOptionsItemSelected(@NonNull MenuItem item) {
+//        int id = item.getItemId();
+//        if (id == R.id.action_Profile){
+//            Intent profileIntent = new Intent(ChangePassword.this , ShowProfile.class);
+//            startActivity(profileIntent);
+//        }
+//        if (id == R.id.action_ChangePassword){
+//            Intent ChangePWIntent = new Intent(ChangePassword.this , ChangePassword.class);
+//            startActivity(ChangePWIntent);
+//        }
+//        if (id == R.id.action_Logout){
+//            Logout();
+//
+//        }
+////        System.out.println("menuuuu2");
+//        return super.onOptionsItemSelected(item);
+//    }
+//
+//    @Override
+//    public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {
+//        super.onCreateContextMenu(menu, v, menuInfo);
+//        getMenuInflater().inflate(R.menu.option, menu);
+////        System.out.println("menuuuu3");
+//    }
+
+
+    protected void buildAlertCFPassword() {
+
+        final AlertDialog.Builder builder = new AlertDialog.Builder(this);
+        builder.setMessage("ยืนยันเปลี่ยนรหัสผ่านใหม่หรือไม่")
+                .setCancelable(false)
+                .setPositiveButton("ใช่", new DialogInterface.OnClickListener() {
+                    public void onClick(final DialogInterface dialog, final int id) {
+                        Toast.makeText(ChangePassword.this, "เปลี่ยนรหัสผ่านสำเร็จ", Toast.LENGTH_SHORT).show();
+                    }
+                })
+                .setNegativeButton("ไม่", new DialogInterface.OnClickListener() {
+                    public void onClick(final DialogInterface dialog, final int id) {
+                        dialog.cancel();
+                    }
+                });
+        final AlertDialog alert = builder.create();
+        alert.show();
+
+    }
+    private void Logout(){
+        firebaseAuth.signOut();
+        Intent intent = new Intent(ChangePassword.this, Login.class);
+        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK
+                | Intent.FLAG_ACTIVITY_CLEAR_TOP
+                | Intent.FLAG_ACTIVITY_CLEAR_TASK);
+        startActivity(intent);
+        finish();
+    }
+
+    private void ShowPassword(){
+        DatabaseReference rootRef = FirebaseDatabase.getInstance().getReference();
+        DatabaseReference uidRef = rootRef.child("User").child(uid);
+        ValueEventListener valueEventListener = new ValueEventListener() {
+            @Override
+            public void onDataChange(DataSnapshot dataSnapshot) {
+               pass= dataSnapshot.child("Password").getValue(String.class);
+              // PasswordCurrent.setText(pass);//getnameไว้หน้าUI
+                System.out.println(pass);
+
+            }
+
+            @Override
+            public void onCancelled(DatabaseError databaseError) {}
+        };
+        uidRef.addListenerForSingleValueEvent(valueEventListener);
+    }
+
+
+
+    public static String EncryptPassword (String base) {
+        try{
+            MessageDigest digest = MessageDigest.getInstance("SHA-256");
+            byte[] hash = digest.digest(base.getBytes("UTF-8"));
+            StringBuffer hexString = new StringBuffer();
+
+            for (int i = 0; i < hash.length; i++) {
+                String hex = Integer.toHexString(0xff & hash[i]);
+                if(hex.length() == 1) hexString.append('0');
+                hexString.append(hex);
+            }
+            return hexString.toString();
+        } catch(Exception ex){
+            throw new RuntimeException(ex);
+        }
+    }
+
+
+    private void updateData(){
+        reference = FirebaseDatabase.getInstance().getReference().child("User").child(firebaseUser.getUid()); //ใช้Uid ที่firebase genขึ้นมา
+        reference.addValueEventListener(new ValueEventListener() {
+            @Override
+            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
+                hashMap = new HashMap<>();
+                hashMap.put("Password", NewPassEncrypt);
+                System.out.println();
+                reference.updateChildren(hashMap);
+            }
+
+            @Override
+            public void onCancelled(@NonNull DatabaseError databaseError) {
+
+            }
+        });
+    }
+
+    public  void updatePasswordFirebaseAuth(){
+
+        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
+        user.updatePassword(NewPassword.getText().toString())
+                .addOnCompleteListener(new OnCompleteListener<Void>() {
+                    @Override
+                    public void onComplete(@NonNull Task<Void> task) {
+                        if (task.isSuccessful()) {
+                            System.out.println("UpdateEPassword Success in Firebase Authen");
+                        }
+                        else {
+                            System.out.println("UpdateEPassword Fail in Firebase Authen");
+                        }
+                    }
+                });
+    }
+
+            private void UpdatePassWord() {
+                final FirebaseUser user1;
+                user1 = FirebaseAuth.getInstance().getCurrentUser();
+                String email = user1.getEmail();
+                AuthCredential credential = EmailAuthProvider.getCredential(email, pass);
+                user1.reauthenticate(credential).addOnCompleteListener(new OnCompleteListener<Void>() {
+                    @Override
+                    public void onComplete(@NonNull Task<Void> task) {
+                        if (task.isSuccessful()) {
+                            user1.updatePassword(newPassword).addOnCompleteListener(new OnCompleteListener<Void>() {
+                                @Override
+                                public void onComplete(@NonNull Task<Void> task) {
+                                    if (!task.isSuccessful()) {
+                                        Toast.makeText(ChangePassword.this, "มีบางอย่างผิดปกติ กรุณาลองใหม่อีกครั้ง", Toast.LENGTH_SHORT).show();
+
+                                    } else {
+//                                        updateData();
+                                        Toast.makeText(ChangePassword.this, "เปลี่ยนรหัสผ่านสำเร็จ", Toast.LENGTH_SHORT).show();
+                                    }
+                                }
+                            });
+                        } else {
+
+                            Toast.makeText(ChangePassword.this, "ไม่สามารถเปลี่ยนรหัสผ่านได้", Toast.LENGTH_SHORT).show();
+                        }
+                    }
+                });
+            }
+}
+
+
+
Index: app/src/main/res/layout/activity_register.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_register.xml	(revision 264cfaa1f29c6efce76988012bd39a1ef4202406)
+++ app/src/main/res/layout/activity_register.xml	(date 1584895993050)
@@ -4,10 +4,16 @@
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    android:background="@drawable/main"
+
     android:orientation="vertical"
     tools:context=".Register">
-
+    <androidx.appcompat.widget.Toolbar
+        android:id="@+id/toolbarrrr"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@drawable/toolbar"
+        >
+    </androidx.appcompat.widget.Toolbar>
 
     <LinearLayout
         android:id="@+id/LayoutName"
Index: app/src/main/java/com/example/tracking/EditProfile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/tracking/EditProfile.java	(date 1584824413059)
+++ app/src/main/java/com/example/tracking/EditProfile.java	(date 1584824413059)
@@ -0,0 +1,413 @@
+package com.example.tracking;
+
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.appcompat.widget.Toolbar;
+import androidx.core.content.ContextCompat;
+
+import android.app.Activity;
+import android.app.ProgressDialog;
+import android.content.Intent;
+import android.graphics.Bitmap;
+import android.graphics.drawable.Drawable;
+import android.net.Uri;
+import android.os.Bundle;
+import android.provider.MediaStore;
+import android.util.Log;
+import android.util.Patterns;
+import android.view.MotionEvent;
+import android.view.View;
+import android.widget.Button;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
+import com.google.android.gms.tasks.Task;
+import com.google.firebase.auth.AuthCredential;
+import com.google.firebase.auth.EmailAuthProvider;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ValueEventListener;
+import com.google.firebase.storage.FirebaseStorage;
+import com.google.firebase.storage.OnProgressListener;
+import com.google.firebase.storage.StorageReference;
+import com.google.firebase.storage.UploadTask;
+import com.squareup.picasso.Picasso;
+
+import java.io.IOException;
+import java.util.HashMap;
+
+import de.hdodenhof.circleimageview.CircleImageView;
+
+import static com.example.tracking.R.id.toolbarrrr;
+
+public class EditProfile extends AppCompatActivity {
+    private static final String TAG = "" ;
+    private FirebaseAuth mAuth;
+    private TextView Name , LastName , Email ,PassWord , CFPassWord;
+    CircleImageView imageviewww;
+    private Button UpdateProfile;
+    String name , lastName , email ,passWord , cfPassWord ,link;
+    private FirebaseAuth firebaseAuth;
+    private FirebaseUser firebaseUser;
+    private final int PICK_IMAGE_REQUEST = 71;
+    private Uri filePath;
+    private DatabaseReference mDatabaseReff;
+    private StorageReference mStorageRef;
+    HashMap hashMap1 = new HashMap<>();
+    HashMap hashMap = new HashMap<>();
+    String uid;
+    String UpdateName , Update_LastName , Update_Email ,Update_image;
+    private DatabaseReference mDatabase;
+    private DatabaseReference reference , referenceUpdate ,reference1;
+    public static final int CAMERA_REQUEST_CODE = 102;
+    public static final int GALLERY_REQUEST_CODE = 105;
+    private int requestCode;
+    private int resultCode;
+    String u;
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_edit_profile);
+        Toolbar toolbar = (Toolbar) findViewById(toolbarrrr);
+        mStorageRef = FirebaseStorage.getInstance().getReference("Images");
+
+        setSupportActionBar(toolbar);
+        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+        getSupportActionBar().setDisplayShowHomeEnabled(true);
+
+        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                onBackPressed();
+                // perform whatever you want on back arrow click
+            }
+        });
+        Drawable drawable = ContextCompat.getDrawable(getApplicationContext(),R.drawable.baseline_more_vert_black_18dp);
+        toolbar.setOverflowIcon(drawable);
+
+        mAuth = FirebaseAuth.getInstance();
+        FirebaseUser currentUser = mAuth.getCurrentUser();
+
+        Name = findViewById(R.id.EditTextName);
+        LastName = findViewById(R.id.EditText_LastName);
+        Email = findViewById(R.id.EditText_Email);
+        CFPassWord = findViewById(R.id.EditText_CFPassWord);
+        UpdateProfile = findViewById(R.id.Button_Update);
+        imageviewww = findViewById(R.id.imageView);
+        firebaseAuth = firebaseAuth.getInstance();
+        firebaseUser = firebaseAuth.getCurrentUser();
+        uid = firebaseUser.getUid();
+        System.out.println(uid +"MiniMinddddddddddddddddddddddddddddddd");
+
+        imageviewww.setOnTouchListener(new View.OnTouchListener() {
+            @Override
+            public boolean onTouch(View view, MotionEvent motionEvent) {
+               chooseImage();
+//                imageviewww.setImageResource(R.drawable.image_icon_proflie);
+                return false;
+            }
+        });
+
+        ShowUpdateUserFirebase();
+//        ShowUpdateLocationUserFirebase();
+
+        UpdateProfile.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                UpdateName = Name.getText().toString();
+                Update_LastName = LastName.getText().toString();
+                Update_Email = Email.getText().toString();
+                Update_image = imageviewww.toString();
+//                LoadImageUrl( Update_image);
+                System.out.println(Update_image);
+                if (UpdateName.isEmpty() && Update_LastName.isEmpty() && Update_Email.isEmpty()){
+                    Toast.makeText(EditProfile.this, "กรุณากรอกข้อมูลให้ครบ", Toast.LENGTH_SHORT).show();
+                }
+              else {
+
+                    if (checkEmail()){
+                        updateDataUser();
+                        uploadImage11();
+                        addEmailtoFirebaseAuth();
+                        Toast.makeText(EditProfile.this, "อัพเดตข้อมูลสำเร็จ", Toast.LENGTH_SHORT).show();
+                    }
+                    else {
+                        checkEmail();
+                    }
+//                  updateLocationData();
+
+                }
+
+            }
+        });
+
+
+    }
+
+
+    private void chooseImage() {
+
+        Intent intent = new Intent();
+        intent.setType("image/*");
+        intent.setAction(Intent.ACTION_GET_CONTENT);
+        startActivityForResult(Intent.createChooser(intent, "Select Picture"), PICK_IMAGE_REQUEST);
+
+    }
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        this.requestCode = requestCode;
+        this.resultCode = resultCode;
+
+        super.onActivityResult(requestCode, resultCode, data);
+        if(requestCode == PICK_IMAGE_REQUEST && resultCode == RESULT_OK
+                && data != null && data.getData() != null )
+        {
+            filePath = data.getData();
+            imageviewww.setImageURI(filePath);
+            try {
+                Bitmap bitmap = MediaStore.Images.Media.getBitmap(getContentResolver(), filePath);
+                imageviewww.setImageBitmap(bitmap);
+            }
+            catch (IOException e)
+            {
+                e.printStackTrace();
+            }
+        }
+        else if (resultCode == Activity.RESULT_CANCELED) {
+            Toast.makeText(EditProfile.this, "Canceled", Toast.LENGTH_SHORT).show();
+        }
+    }
+
+
+
+    private  void LoadImageUrl(String  Update_image){
+        Picasso.get().load( Update_image).placeholder(R.mipmap.ic_launcher)
+                .error(R.mipmap.ic_launcher)
+                .into(imageviewww, new com.squareup.picasso.Callback(){
+
+                    @Override
+                    public void onSuccess() {
+
+                        System.out.println("LoadImageUrl Success");
+                    }
+                    @Override
+                    public void onError(Exception e) {
+                        System.out.println("LoadImageUrl Error");
+
+                    }
+                });
+    }
+
+
+
+
+    private void uploadImage11() {
+        if (filePath != null) {
+
+            final ProgressDialog progressDialog = new ProgressDialog(this);
+            progressDialog.setTitle("Uploading...");
+            final StorageReference reference = mStorageRef.child("images/" + uid);
+            reference.putFile(filePath)
+                    .addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
+                        @Override
+                        public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {
+                            reference.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {
+                                @Override
+                                public void onSuccess(Uri uri) {
+                                    DatabaseReference imageStroe = FirebaseDatabase.getInstance().getReference().child("User").child(firebaseUser.getUid());
+                                    hashMap.put("imageUrl", String.valueOf(uri));
+                                    System.out.println(uri);
+                                    imageStroe.setValue(hashMap).addOnSuccessListener(new OnSuccessListener<Void>() {
+                                        @Override
+                                        public void onSuccess(Void aVoid) {
+                                            System.out.println("Completeddd");
+                                        }
+
+                                    });
+
+                                }
+                            });
+
+
+//                            System.out.println( downloadUrl);
+                        }
+                    })
+                    .addOnFailureListener(new OnFailureListener() {
+                        @Override
+                        public void onFailure(@NonNull Exception e) {
+                            progressDialog.dismiss();
+                            Toast.makeText(EditProfile.this, "Failed " + e.getMessage(), Toast.LENGTH_SHORT).show();
+                        }
+                    })
+                    .addOnProgressListener(new OnProgressListener<UploadTask.TaskSnapshot>() {
+                        @Override
+                        public void onProgress(UploadTask.TaskSnapshot taskSnapshot) {
+                            double progress = (100.0 * taskSnapshot.getBytesTransferred() / taskSnapshot
+                                    .getTotalByteCount());
+                            progressDialog.setMessage("Uploaded " + (int) progress + "%");
+                        }
+                    });
+
+
+        }
+    }
+
+    private void updateDataUser(){
+        reference1 = FirebaseDatabase.getInstance().getReference().child("User").child(uid); //ใช้Uid ที่firebase genขึ้นมา
+        reference1.addValueEventListener(new ValueEventListener() {
+            @Override
+            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
+                hashMap1 = new HashMap<>();
+                hashMap1.put("Name", UpdateName);
+                System.out.println(UpdateName +"Name");
+                hashMap1.put("Last", Update_LastName);
+                System.out.println(Update_LastName+"Name");
+                hashMap1.put("email", Update_Email);
+                System.out.println(Update_Email+"Name");
+                reference1.updateChildren(hashMap1);
+
+            }
+
+            @Override
+            public void onCancelled(@NonNull DatabaseError databaseError) {
+                Toast.makeText(EditProfile.this, "Canceled", Toast.LENGTH_SHORT).show();
+            }
+        });
+    }
+//    private void updateLocationData(){
+//        reference = FirebaseDatabase.getInstance().getReference().child("Location").child(firebaseUser.getUid()); //ใช้Uid ที่firebase genขึ้นมา
+//        reference.addValueEventListener(new ValueEventListener() {
+//            @Override
+//            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
+//                hashMap = new HashMap<>();
+//                hashMap.put("Name", UpdateName);
+//                hashMap.put("email", Update_Email);
+//                reference.updateChildren(hashMap);
+//
+//            }
+//
+//            @Override
+//            public void onCancelled(@NonNull DatabaseError databaseError) {
+//
+//            }
+//        });
+//    }
+
+    private boolean checkEmail( ){
+        if(Patterns.EMAIL_ADDRESS.matcher(Email.getText().toString()).matches() ){
+            return true;
+        }
+        else {
+            Toast.makeText(EditProfile.this,"รูปแบบอีเมล์ไม่ถูกต้อง",Toast.LENGTH_SHORT).show();
+            return false;
+        }
+    }
+    private boolean checkE(){
+
+        if(Patterns.EMAIL_ADDRESS.matcher(Email.getText().toString()).matches()) {
+            return true;
+        }
+        else {
+
+            Toast.makeText(this, "Email is INVALID.", Toast.LENGTH_SHORT).show();
+            return false;
+        }
+
+    }
+
+
+    private void ShowUpdateUserFirebase(){
+
+        DatabaseReference rootRef1 = FirebaseDatabase.getInstance().getReference();
+        final DatabaseReference uidRef = rootRef1.child("User").child(firebaseUser.getUid());
+        ValueEventListener valueEventListener = new ValueEventListener() {
+            @Override
+            public void onDataChange(DataSnapshot dataSnapshot) {
+                name = dataSnapshot.child("Name").getValue(String.class);
+                Name.setText(name);//getnameไว้หน้าUI
+                lastName = dataSnapshot.child("Last").getValue(String.class);
+                LastName.setText(lastName);
+                email = dataSnapshot.child("email").getValue(String.class);
+                Email.setText(email);
+                link = dataSnapshot.child("imageUrl").getValue(String.class);
+                LoadImageUrl(link);
+            }
+
+            @Override
+            public void onCancelled(DatabaseError databaseError) {}
+        };
+        uidRef.addListenerForSingleValueEvent(valueEventListener);
+    }
+
+
+    public  void  addEmailtoFirebaseAuth() {
+
+        FirebaseUser user1 = FirebaseAuth.getInstance().getCurrentUser();
+        user1.updateEmail(Email.getText().toString())
+                .addOnCompleteListener(new OnCompleteListener<Void>() {
+                    @Override
+                    public void onComplete(@NonNull Task<Void> task) {
+                        if (task.isSuccessful()) {
+                            Log.d(TAG, "User email address updated.");
+                           System.out.println("UpdateEmail Succes in Firebase Authen");
+
+                        }
+                        else {
+                            System.out.println("UpdateEmail Fail in Firebase Authen");
+                        }
+                    }
+                });
+}
+
+    @Override
+    public void onStart() {
+        super.onStart();
+//        ShowUpdateUserFirebase();
+
+        System.out.println("++ ON START ++ ");
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+
+//        ShowUpdateUserFirebase();
+
+        System.out.println("+ ON RESUME +");
+
+
+    }
+
+    @Override
+    public void onPause() {
+        super.onPause();
+        System.out.println("- ON PAUSE -");
+    }
+
+    @Override
+    public void onStop() {
+        super.onStop();
+        System.out.println("-- ON STOP -- ");
+    }
+
+    @Override
+    public void onDestroy() {
+        super.onDestroy();
+        System.out.println("- ON DESTROY - ");
+    }
+
+
+
+}
+
+
+
Index: app/src/main/res/layout/activity_change_password.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_change_password.xml	(date 1584887300482)
+++ app/src/main/res/layout/activity_change_password.xml	(date 1584887300482)
@@ -0,0 +1,137 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".ChangePassword">
+    <androidx.appcompat.widget.Toolbar
+        android:id="@+id/toolbarrrr"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@drawable/toolbar"
+        >
+    </androidx.appcompat.widget.Toolbar>
+
+    <TextView
+        android:id="@+id/textview_changePw"
+        android:layout_width="193dp"
+        android:layout_height="60dp"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentEnd="true"
+        android:layout_marginStart="120dp"
+
+
+        android:layout_marginTop="150dp"
+        android:layout_marginEnd="120dp"
+        android:text="เปลี่ยนรหัสผ่าน"
+        android:textAlignment="center"
+        android:textSize="24sp">
+
+
+    </TextView>
+<LinearLayout
+android:id="@+id/LayoutCurrent_password"
+android:layout_width="300dp"
+android:layout_height="wrap_content"
+android:layout_below="@+id/textview_changePw"
+android:layout_centerHorizontal="true"
+android:background="@drawable/bgfortextview"
+android:orientation="vertical"
+android:paddingLeft="20dp"
+android:paddingRight="20dp"
+    android:layout_marginTop="40dp">
+
+
+<EditText
+    android:id="@+id/EditText_CurrentPassword"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_centerHorizontal="true"
+    android:hint="รหัสผ่านเดิม"
+    android:inputType="textPassword"
+    android:textSize="18sp" />
+</LinearLayout>
+
+<LinearLayout
+android:id="@+id/LayoutNewPassword"
+android:layout_width="300dp"
+android:layout_height="wrap_content"
+android:layout_below="@id/LayoutCurrent_password"
+android:layout_centerHorizontal="true"
+android:layout_marginTop="25dp"
+android:background="@drawable/bgfortextview"
+android:orientation="vertical"
+android:paddingLeft="20dp"
+android:paddingRight="20dp">
+
+
+<EditText
+    android:id="@+id/EditText_NewPassword"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:layout_centerHorizontal="true"
+    android:layout_gravity="center"
+    android:hint="รหัสผ่านใหม่"
+    android:inputType="textPassword"
+
+    android:textSize="18sp">
+
+</EditText>
+</LinearLayout>
+
+
+<LinearLayout
+android:id="@+id/LayoutCFNewPassword"
+android:layout_width="300dp"
+android:layout_height="wrap_content"
+android:layout_below="@id/LayoutNewPassword"
+android:layout_centerHorizontal="true"
+android:layout_marginTop="25dp"
+android:background="@drawable/bgfortextview"
+android:paddingLeft="20dp"
+android:paddingRight="20dp">
+
+<EditText
+    android:id="@+id/EditText_CFNewPassword"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:layout_centerHorizontal="true"
+    android:hint="ยินยันรหัสผ่านใหม่"
+    android:inputType="textPassword"
+    android:textSize="18sp">
+
+
+</EditText>
+</LinearLayout>
+
+
+
+<LinearLayout
+android:id="@+id/LayoutChangePassword"
+android:layout_width="300dp"
+android:layout_height="wrap_content"
+android:layout_below="@id/LayoutCFNewPassword"
+android:layout_centerHorizontal="true"
+android:layout_marginTop="40dp"
+android:orientation="vertical"
+android:paddingLeft="20dp"
+android:paddingRight="20dp">
+
+<Button
+    android:id="@+id/Button_ChangePassword"
+    android:layout_width="150dp"
+    android:layout_height="50dp"
+    android:layout_centerHorizontal="true"
+    android:layout_gravity="center"
+
+
+    android:background="@drawable/button_default"
+    android:text="เปลี่ยนรหัสผ่าน"
+    android:textColor="#FFFFFF"
+    >
+</Button>
+</LinearLayout>
+
+
+</RelativeLayout>
\ No newline at end of file
